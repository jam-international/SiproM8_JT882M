// ==========================================================================
// SIPRO - Siax M
//
// COMPANY:     JAM INTERNATIONAL
//
// DESCRIPTION: C1_ExeCucitura.src   
//
// NOTE:                                NAME:           VER:    DATE:
// -------------------------------------------------------------------------
// Prima stesura                        gf              1.0     04/03/2021
// Ultima modifica
//
// NOTA: non modificare questo file
// ==========================================================================


#include "DefVar.h"



sub ()
        // Piedino su
	
    SyncVar( C1_CmdPiedinoSu )    

        // --------------------------------------------------
        // Velocita' [mm/min] nei G0 senza cucitura
    if ( C1_ReloadParam )
        ExecPlcFun( PLC_CUCI_CMD, 107, C1_FEED_G0_IDX )        
    endif
        // --------------------------------------------------
        
        // Reset variabile di canale: vel. asse ago RPM
    VcdRpmAgo = 0
        // --------------------------------------------------
        // La Velocita' di lavoro Ago dei parametri e' il limite massimo
    C1_VelLavRPM = C1_ParVelLavRPM

    if ( C1_VelLavRPM > C1_UdfVelLavRPM )           // #M200717_1GF#
        C1_VelLavRPM = C1_UdfVelLavRPM
    endif

        
        // La minore tra C1_ParVelLavRPM e C1_UdfVelLavRPM

        // Verifica ulteriore limitazione
    if ( C1_VelLavRPM > C1_VelRiduzioneRPM )        // #M200717_1GF#
        C1_VelLavRPM = C1_VelRiduzioneRPM
    endif
    // Imposta la velocita' di lavoro 
    ExecPlcFun( PLC_CUCI_CMD, 106, C1_VelLavRPM )  // #M210313_1GF        

        // --------------------------------------------------
        // Esegue solo se e' necessario ricalcolare i parametri
	vntest1 = 10
    if ( C1_ReloadParam )

            // --------------------------------------------------
            // Punti iniziali da profilo UDF o da parametro
        if ( C1_UdfVelIniRPM > 0 )
          C1_PtIni  = C1_UdfPuntiVelIni * 1000
          C1_RpmIni = C1_UdfVelIniRPM 
        else
          C1_PtIni  = C1_ParPuntiVelIni * 1000
          C1_RpmIni = C1_ParVelIniRPM 
        endif

            // #M200529_1GF#
        if ( C1_RpmIni > C1_VelLavRPM )
            C1_RpmIni = C1_VelLavRPM 
        endif

            // Imposta punti iniziali ( funzione PLC )
        ExecPlcFun( PLC_CUCI_SET_PARAM, 103, C1_PT_INI_IDX )        

            // --------------------------------------------------
            // Punti finali da profilo UDF o da parametro
        if ( C1_UdfVelRallRPM > 0 )
            C1_PtRall  = C1_UdfPuntiVelRall * 1000
            C1_RpmRall = C1_UdfVelRallRPM 
        else
            C1_PtRall  = C1_ParPuntiVelRall * 1000
            C1_RpmRall = C1_ParVelRallRPM 
        endif

            // #M200529_1GF#
        if ( C1_RpmRall > C1_VelLavRPM )
            C1_RpmRall = C1_VelLavRPM 
        endif

            // Imposta punti finali ( funzione PLC )
        ExecPlcFun( PLC_CUCI_SET_PARAM, 104, C1_PT_RALL_IDX )        

            // --------------------------------------------------
            // Lettura delle coordinate di inizio cucitura
        C1_FirstPtContext = C1_PROFILO_CNTX

        ExecPlcFun( PLC_CUCI_CMD, 161, C1_FIRST_PT_IDX )

        if ( C1_FirstPtValid > 0 )
        Vn2CodiceAllarmeXHmi = 3
            gosub "Halt.obj"
        endif

            // Creazione del buffer di cucitura
        ISO G281 P CA_MD_NO_MOVE X C1_FirstPt_X Y C1_FirstPt_Y
    //  ExecPlcFun( PLC_CUCI_CMD, 160, C1_PROFILO_CNTX )            // #M201023_1GF#        
        C1_CalcBufContext = C1_PROFILO_CNTX                         // #M201023_1GF#
        ExecPlcFun( PLC_CUCI_CMD, 159, C1_CALC_BUF_IDX )            // #M201023_1GF#        
        ISO G280

            // Verifica codice errore creazione tabella             // #M201023_1GF#
        if ( C1_CalcBufErrCode > 0 )
        Vn2CodiceAllarmeXHmi = 4
            gosub "Halt.obj"        
        endif

    endif

    //aspetto autorizzazione a partire a cucire dal CicloAutomatico
do
    if(Vn16GoCuci == 1 or Vn16GoCuci ==2 or Vn16GoCuci ==3)

        if(Vn16GoCuci ==2 or Vn16GoCuci ==3)
            goto ENDCUCI
        endif
        Vn16GoCuci = 0
        exitdo
    endif
    loop

        // Movimento a posizione di inizio cucitura
    C1_VelFeed = C1_Udf_FeedG0
    ISO G1 X C1_FirstPt_X Y C1_FirstPt_Y F C1_VelFeed

        // Verifica esecuzione simulata: viene forzato Hold
    if ( C1_CuciSimulaAuto == 1 )
        C1_CmdHoldRelease = 1
    endif
    

    if ( C1_CmdHoldRelease == 0 )
        ISO G281 P CA_MD_NO_RES_NO_INS X C1_FirstPt_X Y C1_FirstPt_Y		//riparto dal primo punto di cucitura del programma
    else
        C1_CuciBufRewind = ON   // #M230406_1GF# - force rewind flag in C1_Ripartenza
        gosub "C1_Ripartenza"
    endif


   C1_CuciBufRewind = OFF      // #M230406_1GF# - reset rewind flag    

    C1_ReloadParam = OFF        // finito il primo giro in automatico non eseguo più le impostazioni

        // Esecuzione cucitura
    Vb30_C1_InCucitura = ON 


	//C1_CmdPiedinoSu =OFF
	//C1_CmdPiedinoGiu = ON
    do

        ISO G280

            // Attesa
        DelayS( 0.1 )

            // Attesa asse ago fermo
        WaitCond( IsAxInStop( C1_AsseAGO ) )      

            // Non in stato di HOLD
        if ( C1_CmdHoldRelease == 0 )

		//****** 882 traslatore 
		if(Vn_ID_macchina == 882)
			if((Vb4513_AppEnbCucitrice2 ==1 and Vb4000_Automatico == 0) or (Vb4513_AppEnbCucitrice2 ==0 and Vb4515_AppEnbScaricatore ==1))	//controllo se ho due teste inserite e piegatore spento

			
				if ( Vb4513_AppEnbCucitrice2 and Vn120_AppEnbScambioPinzeC1_Car2 == 0)
					Vb4805_AppStartCaricatoreC1 = OFF
					RichiestaStartCuci2 = 1
				endif

				if(VbChn3AutoRun == 0)
					Vb12_StepResetCanale3_2 = OFF
					Vb4016_PrgTraslatoreRun = ON
					VnStatoCuci1 = 0
					VnStatoCuci2 = 0
					VbChn3Start = 1

					if(VbChn2AutoRun == 0 and C2_VbRunCuci == 0 and Vb4382_AppAut_o50_C2_Pinza_int == OFF)
						Vb4382_AppAut_o50_C2_Pinza_int = ON
						 SyncVar( C2_CmdPiedinoSu )    
						

					endif

				endif
				//****** fine 882


			endif
		endif
		//****** End 882 traslatore 


            exitdo
        endif            

            // Ripartenza cucitura
        gosub "C1_Ripartenza"

    loop        

        // Piedino su
    SyncVar( C1_CmdPiedinoSu )    

        // #####################################
        // PERSONALIZZAZIONE: blocco fine spola 
    if ( Vb4071_AbilitaContSpolaC1 == 1 and Vb4072_AllarmeContSpolaC1 )

         C1_VelFeed = C1_Par_FeedG0Reset
        if ( C1_Udf_FeedG0 < C1_VelFeed )           // #M200717_1GF#
            C1_VelFeed = C1_Udf_FeedG0
        endif

        ISO G1 X C1_QuoHomeX Y C1_QuoHomeY F C1_VelFeed    
        WaitCond ( Vb4072_AllarmeContSpolaC1 == 0 or Vb4071_AbilitaContSpolaC1 ==0 )
    endif
        // #####################################

        // Solo se presente l'asse di rotazione
    if ( C1_AsseC != AX_NULL )    
            // Movimento asse C alla posizione iniziale - #M200724_1GF#
        C1_Fun74_QuoObj = C1_FirstPt_C
        if ( C1_ParVelRotazione > 0 ) 
            C1_Fun74_VelObj = -C1_ParVelRotazione
        else    
            C1_Fun74_VelObj = -10
        endif
        C1_Fun74_Future = 0
        ExecPlcFun( PLC_MOVE_AX, (C1_AsseC * 100), C1_FUN74_IDX )
    endif


:ENDCUCI
    Vn16GoCuci = 0
    // Movimento a posizione di home ( coordinate macchina )
  /////////////  Vb4805_AppStartCaricatoreC1 = ON
    C1_VelFeed = C1_Par_FeedG0Reset
    if ( C1_Udf_FeedG0 < C1_VelFeed )           // #M200717_1GF#
        C1_VelFeed = C1_Udf_FeedG0
    endif
    ISO G1 X C1_QuoHomeX Y C1_QuoHomeY F C1_VelFeed
    
           // Attesa assi X Y fermi
     WaitCond( IsAxInStop( C1_AsseX ) )      
     WaitCond( IsAxInStop( C1_AsseY ) )      

    Vb4805_AppStartCaricatoreC1 = ON
    Vb30_C1_InCucitura = OFF
    Vb88_TascaC1Completata = ON
endsub
